{"version":3,"sources":["libs/pnotify.js","Styles.js","redux/contacts/contacts.actions.js","components/Form/Form.js","components/ContactList/styles.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/contacts/contacts.reducer.js","redux/store.js","index.js"],"names":["defaults","styling","icons","Container","styled","div","displayName","FormElement","form","FormGroup","Label","label","Input","input","Button","button","addContact","createAction","deleteContact","changeFilter","initState","name","phone","Form","state","onInputChange","e","target","value","setState","onFormSubmit","preventDefault","props","contacts","some","contact","notice","title","text","id","uuid4","inputNameId","shortid","generate","inputPhoneId","onSubmit","this","htmlFor","type","onChange","pattern","required","Component","connect","items","dispatch","Li","li","ContactList","onDeleteClick","length","map","onClick","className","defaultProps","getContacts","allContacts","filter","console","log","normalizedFilter","toLowerCase","trim","includes","onFilterInput","inputFilterId","App","StrictMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5f488c80.chunk.js","sourcesContent":["import { defaults, notice } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/Material.css';\r\nimport 'material-design-icon-fonts/iconfont/material-icons.css';\r\n\r\ndefaults.styling = 'material';\r\ndefaults.icons = 'material';\r\n\r\nexport { notice };\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 1170px;\r\n\tmargin: 0 auto;\r\n\tpadding: 0 15px;\r\n`;\r\nContainer.displayName = 'Container';\r\nexport const FormElement = styled.form`\r\n\twidth: 50%;\r\n\tborder: 1px solid #555;\r\n\tborder-radius: 5px;\r\n\tpadding: 15px;\r\n\tmargin-bottom: 15px;\r\n`;\r\nFormElement.displayName = 'FormElement';\r\n\r\nexport const FormGroup = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-top: 10px;\r\n`;\r\nFormGroup.displayName = 'FormGroup';\r\n\r\nexport const Label = styled.label`\r\n\tflex-basis: 20%;\r\n`;\r\nLabel.displayName = 'Label';\r\n\r\nexport const Input = styled.input`\r\n\tborder: 1px solid #000;\r\n\tbackground: #fff;\r\n\tcolor: #000;\r\n\tpadding: 5px 15px;\r\n`;\r\nInput.displayName = 'Input';\r\n\r\nexport const Button = styled.button`\r\n\tborder: 1px solid #000;\r\n\tbackground: #fff;\r\n\tcolor: #000;\r\n\tpadding: 5px 15px;\r\n\ttransition: all 200ms ease-in-out;\r\n\tfont-size: 16px;\r\n\talign-items: center;\r\n\tdisplay: inline-flex;\r\n\t&:hover {\r\n\t\tbackground: #000;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\nButton.displayName = 'Button';\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/add');\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/filter');\r\n","import shortid from 'shortid';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid4 } from 'uuid';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { notice } from '../../libs/pnotify';\r\nimport { FormGroup, Label, FormElement, Button, Input } from '../../Styles';\r\nimport { addContact } from '../../redux/contacts/contacts.actions';\r\n\r\nconst initState = {\r\n\tname: '',\r\n\tphone: '',\r\n};\r\n\r\nclass Form extends Component {\r\n\tstate = initState;\r\n\r\n\tonInputChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\r\n\tonFormSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tconst { name, phone } = this.state;\r\n\t\tconst { contacts } = this.props;\r\n\t\tconst isContactExist = contacts.some(\r\n\t\t\tcontact => contact.name === name || contact.phone === phone,\r\n\t\t);\r\n\t\tif (isContactExist) {\r\n\t\t\tnotice({\r\n\t\t\t\ttitle: 'The contact is already in the list',\r\n\t\t\t\ttext: 'Please, add a contact with a different name or phone number',\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.onFormSubmit({\r\n\t\t\t...this.state,\r\n\t\t\tid: uuid4(),\r\n\t\t});\r\n\t\tthis.setState(initState);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst inputNameId = shortid.generate();\r\n\t\tconst inputPhoneId = shortid.generate();\r\n\r\n\t\treturn (\r\n\t\t\t<FormElement onSubmit={this.onFormSubmit}>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label htmlFor={inputNameId}>Name</Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid={inputNameId}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\t\t\tpattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n\t\t\t\t\t\ttitle=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label htmlFor={inputPhoneId}>Phone</Label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tid={inputPhoneId}\r\n\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\tvalue={this.state.phone}\r\n\t\t\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Button type=\"submit\">Add contact</Button>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</FormElement>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nForm.propTypes = {\r\n\tonFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mstp = state => ({\r\n\tcontacts: state.contacts.items,\r\n});\r\n\r\nconst mdtp = dispatch => ({\r\n\tonFormSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mstp, mdtp)(Form);\r\n","import styled from 'styled-components';\r\n\r\nexport const Li = styled.li`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\nLi.displayName = 'Li';\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from '../../Styles';\r\nimport { Li } from './styles';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts.actions';\r\n\r\nconst ContactList = ({ contacts, onDeleteClick }) => (\r\n\t<>\r\n\t\t<h1>Contacts</h1>\r\n\t\t{contacts.length ? (\r\n\t\t\t<ul>\r\n\t\t\t\t{contacts.map(({ id, name, phone }) => (\r\n\t\t\t\t\t<Li key={id}>\r\n\t\t\t\t\t\t{name}: {phone}\r\n\t\t\t\t\t\t<Button onClick={() => onDeleteClick(id)}>\r\n\t\t\t\t\t\t\t<span className=\"material-icons\">delete</span>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t) : (\r\n\t\t\t<p>There are no contacts yet...</p>\r\n\t\t)}\r\n\t</>\r\n);\r\n\r\nContactList.defaultProps = {\r\n\tcontacts: [],\r\n};\r\n\r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\tphone: PropTypes.string.isRequired,\r\n\t\t}),\r\n\t),\r\n\tonDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getContacts = (allContacts, filter) => {\r\n\tconsole.log(allContacts);\r\n\tconst normalizedFilter = filter.toLowerCase().trim();\r\n\treturn allContacts.filter(\r\n\t\tcontact =>\r\n\t\t\tcontact.name.toLowerCase().trim().includes(normalizedFilter) ||\r\n\t\t\tcontact.phone.toLowerCase().trim().includes(normalizedFilter),\r\n\t);\r\n};\r\n\r\nconst mstp = ({ contacts: { items, filter } }) => ({\r\n\tcontacts: getContacts(items, filter),\r\n});\r\n\r\nconst mdtp = dispatch => ({\r\n\tonDeleteClick: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mstp, mdtp)(ContactList);\r\n","import shortid from 'shortid';\r\nimport { connect } from 'react-redux';\r\nimport { FormElement, FormGroup, Input, Label } from '../../Styles';\r\nimport { changeFilter } from '../../redux/contacts/contacts.actions';\r\n\r\nconst Filter = ({ value, onFilterInput }) => {\r\n\tconst inputFilterId = shortid.generate();\r\n\treturn (\r\n\t\t<FormElement>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label htmlFor={inputFilterId}>Filter</Label>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tid={inputFilterId}\r\n\t\t\t\t\tname=\"filter\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={onFilterInput}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t</FormElement>\r\n\t);\r\n};\r\n\r\nconst mstp = state => ({\r\n\tvalue: state.contacts.filter,\r\n});\r\n\r\nconst mdtp = dispatch => ({\r\n\tonFilterInput: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mstp, mdtp)(Filter);\r\n","import React from 'react';\r\n\r\nimport Form from './components/Form';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nimport './App.css';\r\nimport { Container } from './Styles';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<React.StrictMode>\r\n\t\t\t<Container>\r\n\t\t\t\t<h1>Phonebook</h1>\r\n\t\t\t\t<Form />\r\n\t\t\t\t<Filter />\r\n\t\t\t\t<ContactList />\r\n\t\t\t</Container>\r\n\t\t</React.StrictMode>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './contacts.actions';\r\n\r\nconst initItems = [\r\n\t{ id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\r\n\t{ id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\r\n\t{ id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\r\n\t{ id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(initItems, {\r\n\t[addContact]: (state, { payload }) => [payload, ...state],\r\n\t[deleteContact]: (state, { payload }) =>\r\n\t\tstate.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n\t[changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n\titems,\r\n\tfilter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n\tpersistStore,\r\n\tpersistReducer,\r\n\tFLUSH,\r\n\tREHYDRATE,\r\n\tPAUSE,\r\n\tPERSIST,\r\n\tPURGE,\r\n\tREGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { logger } from 'redux-logger/src';\r\n\r\nimport contactsReducer from './contacts/contacts.reducer';\r\n\r\nconst contactsPersistConfig = {\r\n\tkey: 'contacts',\r\n\tstorage,\r\n\tblacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tcontacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n\t},\r\n\tdevTools: process.env.NODE_ENV === 'development',\r\n\tmiddleware: [\r\n\t\t...getDefaultMiddleware({\r\n\t\t\tserializableCheck: {\r\n\t\t\t\tignoredActions: [\r\n\t\t\t\t\tFLUSH,\r\n\t\t\t\t\tREHYDRATE,\r\n\t\t\t\t\tPAUSE,\r\n\t\t\t\t\tPERSIST,\r\n\t\t\t\t\tPURGE,\r\n\t\t\t\t\tREGISTER,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t}),\r\n\t\tlogger,\r\n\t],\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store.store}>\r\n\t\t\t<PersistGate loading={null} persistor={store.persistor}>\r\n\t\t\t\t<App />\r\n\t\t\t</PersistGate>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}